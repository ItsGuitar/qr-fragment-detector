import cv2
import tkinter as tk
from tkinter import Label
from PIL import Image, ImageTk
import datetime
import os

def video_stream():
    ret, frame = cap.read()

    if ret:
        # Resize and convert the frame
        frame = cv2.resize(frame, (video_width, video_height))
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        
        # Convert to ImageTk format
        img = Image.fromarray(frame)
        img_tk = ImageTk.PhotoImage(image=img)
        
        # Update label image
        label.img_tk = img_tk  
        label.config(image=img_tk)

    # Schedule next frame update (50 ms delay to match ~20 FPS)
    root.after(50, video_stream)

def on_close():
    cap.release()
    root.quit()  # Cleanly exit the tkinter mainloop

def take_photo():
    
    # *** directory สำหรับบันทึกภาพ ***
    save_directory = "C:\(IT) VLVU"
    
    ret, frame = cap.read()
    if ret:
        # Resize and convert the frame
        frame = cv2.resize(frame, (video_width, video_height))
        
        # Generate a filename with timestamp
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        filename = f"photo_{timestamp}.png"
        
        # Convert the frame to RGB (OpenCV uses BGR)
        frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        
        # Convert to a PIL image and save it
        img = Image.fromarray(frame_rgb)
        
        # *** เปลี่ยนชื่อไฟล์เป็น photo.jpg ***
        filename = os.path.join(save_directory, 'photo.jpg')
        img.save(filename)
        print(f"Photo saved as {filename}")

root = tk.Tk()
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()

# Make the window fullscreen
root.attributes("-fullscreen", True)

# Set video stream resolution
video_width = 640
video_height = 480 

# Add the label to display the video stream
label = Label(root)
label.place(x=(screen_width - video_width) // 2, y=(screen_height - video_height) // 2)

# Add the "Take Photo" button
photo_button = tk.Button(root, text="ถ่าย", command=take_photo)
photo_button.place(x=(screen_width - 100) // 2, y=screen_height - 100)

# Open the video capture (default webcam)
cap = cv2.VideoCapture(0)

# Bind window close to our custom function to release resources
root.protocol("WM_DELETE_WINDOW", on_close)

# Start the video stream
video_stream()

# Start the tkinter mainloop
root.mainloop()
